// Code generated by go generate DO NOT EDIT.

package main

// UserIDs
func (xs Users) UserIDs() []string {
	sli := make([]string, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].UserID)
	}
	return sli
}

// Chan0s
func (xs Users) Chan0s() []chan int {
	sli := make([]chan int, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].Chan0)
	}
	return sli
}

// Chan1s
func (xs Users) Chan1s() []chan func() (string) {
	sli := make([]chan func() (string), 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].Chan1)
	}
	return sli
}

// ChanAs
func (xs Users) ChanAs() []*chan int {
	sli := make([]*chan int, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].ChanA)
	}
	return sli
}

// ChanBs
func (xs Users) ChanBs() []*chan func() (string) {
	sli := make([]*chan func() (string), 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].ChanB)
	}
	return sli
}

// Chanies
func (xs Users) Chanies() []*chan<- int {
	sli := make([]*chan<- int, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].ChanY)
	}
	return sli
}
